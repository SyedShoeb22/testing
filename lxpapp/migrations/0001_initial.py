# Generated by Django 4.2.7 on 2025-01-23 13:42

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Activity',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('serial_number', models.IntegerField(default=0)),
                ('urlvalue', models.CharField(max_length=2000)),
                ('description', models.CharField(max_length=200)),
            ],
            options={
                'ordering': ['subject', 'chapter', 'serial_number'],
            },
        ),
        migrations.CreateModel(
            name='Batch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('batch_name', models.CharField(max_length=50)),
                ('stdate', models.DateField()),
                ('enddate', models.DateField()),
            ],
        ),
        migrations.CreateModel(
            name='Chapter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('chapter_name', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='ChapterQuestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.CharField(max_length=600)),
                ('option1', models.CharField(max_length=200)),
                ('option2', models.CharField(max_length=200)),
                ('option3', models.CharField(max_length=200)),
                ('option4', models.CharField(max_length=200)),
                ('answer', models.CharField(choices=[('1', 'Option1'), ('2', 'Option2'), ('3', 'Option3'), ('4', 'Option4')], max_length=200)),
                ('marks', models.IntegerField(default=0)),
                ('chapter', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lxpapp.chapter')),
            ],
        ),
        migrations.CreateModel(
            name='ChapterResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('marks', models.PositiveIntegerField()),
                ('wrong', models.PositiveIntegerField()),
                ('correct', models.PositiveIntegerField()),
                ('timetaken', models.CharField(max_length=200)),
                ('date', models.DateTimeField(auto_now=True)),
                ('chapter', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lxpapp.chapter')),
            ],
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('course_name', models.CharField(max_length=200)),
                ('description', models.CharField(default='', max_length=1000)),
                ('whatlearn', models.CharField(default='', max_length=1000)),
                ('includes', models.CharField(default='', max_length=1000)),
                ('themecolor', models.CharField(choices=[('1', 'Advanced'), ('2', 'Easy'), ('3', 'Intermideate')], default='Green', max_length=200)),
                ('tags', models.CharField(default='', max_length=10000)),
                ('image', models.CharField(default='', max_length=1000)),
                ('banner', models.CharField(default='', max_length=1000)),
                ('price', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='CourseType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('coursetype_name', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Exam',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('exam_name', models.CharField(max_length=50)),
                ('questiontpye', models.CharField(choices=[('MCQ', 'MCQ'), ('ShortAnswer', 'ShortAnswer')], default='', max_length=200)),
                ('batch', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lxpapp.batch')),
            ],
        ),
        migrations.CreateModel(
            name='MainHead',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mainhead_name', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='McqQuestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.CharField(max_length=600)),
                ('option1', models.CharField(max_length=200)),
                ('option2', models.CharField(max_length=200)),
                ('option3', models.CharField(max_length=200)),
                ('option4', models.CharField(max_length=200)),
                ('answer', models.CharField(choices=[('1', 'Option1'), ('2', 'Option2'), ('3', 'Option3'), ('4', 'Option4')], max_length=200)),
                ('marks', models.IntegerField(default=0)),
                ('exam', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lxpapp.exam')),
            ],
        ),
        migrations.CreateModel(
            name='McqResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('marks', models.PositiveIntegerField()),
                ('wrong', models.PositiveIntegerField()),
                ('correct', models.PositiveIntegerField()),
                ('timetaken', models.CharField(max_length=200)),
                ('date', models.DateTimeField(auto_now=True)),
                ('exam', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lxpapp.exam')),
                ('learner', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Playlist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('channel_id', models.TextField(blank=True)),
                ('channel_name', models.TextField(blank=True)),
                ('is_yt_mix', models.BooleanField(default=False)),
                ('playlist_id', models.CharField(max_length=150)),
                ('name', models.CharField(blank=True, max_length=150)),
                ('thumbnail_url', models.TextField(blank=True)),
                ('description', models.TextField(default='No description')),
                ('video_count', models.IntegerField(default=0)),
                ('published_at', models.DateTimeField(default=datetime.datetime.now)),
                ('is_private_on_yt', models.BooleanField(default=False)),
                ('playlist_yt_player_HTML', models.TextField(blank=True)),
                ('playlist_duration', models.CharField(blank=True, max_length=69)),
                ('playlist_duration_in_seconds', models.BigIntegerField(default=0)),
                ('started_on', models.DateTimeField(default=datetime.datetime.now, null=True)),
                ('last_watched', models.DateTimeField(default=datetime.datetime.now, null=True)),
                ('user_notes', models.TextField(default='')),
                ('user_label', models.CharField(default='', max_length=100)),
                ('marked_as', models.CharField(default='none', max_length=100)),
                ('is_favorite', models.BooleanField(blank=True, default=False)),
                ('num_of_accesses', models.IntegerField(default='0')),
                ('last_accessed_on', models.DateTimeField(default=datetime.datetime.now)),
                ('is_user_owned', models.BooleanField(default=True)),
                ('auto_check_for_updates', models.BooleanField(default=False)),
                ('is_in_db', models.BooleanField(default=False)),
                ('has_playlist_changed', models.BooleanField(default=False)),
                ('has_new_updates', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Scheduler',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('1', 'Session'), ('2', 'Interview'), ('3', 'Client Requirment'), ('4', 'Lab Call'), ('5', 'Meeting'), ('6', 'Others')], max_length=200, null=True)),
                ('start', models.DateTimeField()),
                ('end', models.DateTimeField(blank=True, null=True)),
                ('eventdetails', models.CharField(max_length=200, null=True)),
                ('meeting_link', models.URLField(blank=True, max_length=500, null=True)),
                ('chapter', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lxpapp.chapter')),
            ],
        ),
        migrations.CreateModel(
            name='ShortQuestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.CharField(max_length=600)),
                ('marks', models.IntegerField(default=0)),
                ('exam', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lxpapp.exam')),
            ],
        ),
        migrations.CreateModel(
            name='ShortResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('marks', models.PositiveIntegerField()),
                ('datecreate', models.DateTimeField(auto_now=True)),
                ('status', models.BooleanField(default=False)),
                ('timetaken', models.CharField(max_length=200)),
                ('exam', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lxpapp.exam')),
                ('learner', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject_name', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Video',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('video_id', models.CharField(max_length=100)),
                ('name', models.CharField(blank=True, max_length=100)),
                ('duration', models.CharField(blank=True, max_length=100)),
                ('duration_in_seconds', models.BigIntegerField(default=0)),
                ('thumbnail_url', models.TextField(blank=True)),
                ('published_at', models.DateTimeField(default=datetime.datetime.now)),
                ('description', models.TextField(default='')),
                ('has_cc', models.BooleanField(blank=True, default=False, null=True)),
                ('liked', models.BooleanField(default=False)),
                ('public_stats_viewable', models.BooleanField(default=True)),
                ('view_count', models.BigIntegerField(default=0)),
                ('like_count', models.BigIntegerField(default=0)),
                ('dislike_count', models.BigIntegerField(default=0)),
                ('comment_count', models.BigIntegerField(default=0)),
                ('yt_player_HTML', models.TextField(blank=True)),
                ('channel_id', models.TextField(blank=True)),
                ('channel_name', models.TextField(blank=True)),
                ('is_unavailable_on_yt', models.BooleanField(default=False)),
                ('was_deleted_on_yt', models.BooleanField(default=False)),
                ('is_planned_to_watch', models.BooleanField(default=False)),
                ('is_marked_as_watched', models.BooleanField(default=False)),
                ('is_favorite', models.BooleanField(blank=True, default=False)),
                ('num_of_accesses', models.IntegerField(default=0)),
                ('user_label', models.CharField(blank=True, max_length=100)),
                ('user_notes', models.TextField(blank=True)),
                ('video_details_modified', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='YTExamQuestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.CharField(max_length=600)),
                ('option1', models.CharField(max_length=200)),
                ('option2', models.CharField(max_length=200)),
                ('option3', models.CharField(max_length=200)),
                ('option4', models.CharField(max_length=200)),
                ('answer', models.CharField(choices=[('1', 'Option1'), ('2', 'Option2'), ('3', 'Option3'), ('4', 'Option4')], max_length=200)),
                ('marks', models.IntegerField(default=1)),
                ('playlist', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lxpapp.playlist')),
                ('video', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lxpapp.video')),
            ],
        ),
        migrations.CreateModel(
            name='YTExamResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('marks', models.PositiveIntegerField()),
                ('wrong', models.PositiveIntegerField()),
                ('correct', models.PositiveIntegerField()),
                ('timetaken', models.CharField(max_length=200)),
                ('date', models.DateTimeField(auto_now=True)),
                ('learner', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('ytexamquestion', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lxpapp.ytexamquestion')),
            ],
        ),
        migrations.CreateModel(
            name='YTExamResultDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('selected', models.CharField(max_length=200)),
                ('question', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lxpapp.ytexamquestion')),
                ('ytexamresult', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lxpapp.ytexamresult')),
            ],
        ),
        migrations.CreateModel(
            name='VideoWatched',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('learner', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('video', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lxpapp.video')),
            ],
        ),
        migrations.CreateModel(
            name='VideoToUnlock',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('learner', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('playlist', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lxpapp.playlist')),
                ('video', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lxpapp.video')),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('regdate', models.DateTimeField(default=datetime.datetime.now)),
                ('contactno', models.CharField(default='', max_length=200)),
                ('skills', models.CharField(default='', max_length=200)),
                ('bio', models.CharField(default='', max_length=2000)),
                ('profile_img', models.ImageField(blank=True, null=True, upload_to='profile_img/')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserPics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('picpath', models.TextField(default='')),
                ('pic', models.ImageField(upload_to='')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('login', models.DateTimeField(default=datetime.datetime.now)),
                ('logout', models.DateTimeField(default=datetime.datetime.now)),
                ('dur', models.CharField(default='', max_length=200)),
                ('session_id', models.CharField(default='', max_length=200)),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserActivity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.CharField(max_length=2048)),
                ('method', models.CharField(max_length=16)),
                ('status_code', models.IntegerField(blank=True, null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='TrainerNotification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('trainernotification_message', models.CharField(max_length=200)),
                ('status', models.BooleanField(default=False)),
                ('sender', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='senders', to=settings.AUTH_USER_MODEL)),
                ('trainer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='trainers', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Topic',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('topic_name', models.CharField(max_length=200)),
                ('chapter', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lxpapp.chapter')),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=69)),
                ('times_viewed', models.IntegerField(default=0)),
                ('times_viewed_per_week', models.IntegerField(default=0)),
                ('last_views_reset', models.DateTimeField(default=datetime.datetime.now)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='playlist_tags', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='SubHead',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subhead_name', models.CharField(max_length=200)),
                ('mainhead', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lxpapp.mainhead')),
            ],
        ),
        migrations.CreateModel(
            name='ShortResultDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('marks', models.PositiveIntegerField()),
                ('answer', models.CharField(max_length=200)),
                ('feedback', models.CharField(default='', max_length=200)),
                ('question', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lxpapp.shortquestion')),
                ('shortresult', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lxpapp.shortresult')),
            ],
        ),
        migrations.CreateModel(
            name='SessionMaterial',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mtype', models.CharField(choices=[('PDF', 'PDF'), ('HTML', 'HTML'), ('Video', 'Video'), ('URL', 'URL')], default='PDF', max_length=200)),
                ('urlvalue', models.CharField(max_length=200)),
                ('description', models.CharField(max_length=200)),
                ('playlist', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lxpapp.playlist')),
                ('video', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lxpapp.video')),
            ],
        ),
        migrations.CreateModel(
            name='SchedulerStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('status', models.PositiveIntegerField(default=0)),
                ('scheduler', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lxpapp.scheduler')),
                ('trainer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='scheduler',
            name='subject',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lxpapp.subject'),
        ),
        migrations.AddField(
            model_name='scheduler',
            name='topic',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lxpapp.topic'),
        ),
        migrations.AddField(
            model_name='scheduler',
            name='trainer',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='PlaylistItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('playlist_item_id', models.CharField(max_length=100)),
                ('video_position', models.IntegerField(blank=True)),
                ('published_at', models.DateTimeField(default=datetime.datetime.now)),
                ('channel_id', models.CharField(max_length=250, null=True)),
                ('channel_name', models.CharField(max_length=250, null=True)),
                ('is_duplicate', models.BooleanField(default=False)),
                ('is_marked_as_watched', models.BooleanField(blank=True, default=False)),
                ('num_of_accesses', models.IntegerField(default=0)),
                ('playlist', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='playlist_items', to='lxpapp.playlist')),
                ('video', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lxpapp.video')),
            ],
        ),
        migrations.AddField(
            model_name='playlist',
            name='tags',
            field=models.ManyToManyField(related_name='playlists', to='lxpapp.tag'),
        ),
        migrations.AddField(
            model_name='playlist',
            name='videos',
            field=models.ManyToManyField(related_name='playlists', to='lxpapp.video'),
        ),
        migrations.CreateModel(
            name='Pin',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('kind', models.CharField(max_length=100)),
                ('playlist', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lxpapp.playlist')),
                ('video', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lxpapp.video')),
            ],
        ),
        migrations.CreateModel(
            name='McqResultDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('selected', models.CharField(max_length=200)),
                ('mcqresult', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lxpapp.mcqresult')),
                ('question', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lxpapp.mcqquestion')),
            ],
        ),
        migrations.CreateModel(
            name='Material',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('serial_number', models.IntegerField(default=0)),
                ('topic', models.CharField(max_length=200)),
                ('mtype', models.CharField(choices=[('PDF', 'PDF'), ('HTML', 'HTML'), ('Video', 'Video'), ('URL', 'URL')], default='PDF', max_length=200)),
                ('urlvalue', models.CharField(max_length=2000)),
                ('description', models.CharField(max_length=200)),
                ('chapter', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lxpapp.chapter')),
                ('subject', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lxpapp.subject')),
            ],
            options={
                'ordering': ['subject', 'chapter', 'serial_number'],
            },
        ),
        migrations.CreateModel(
            name='LearnerPlaylistCount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('count', models.PositiveIntegerField(default=0)),
                ('learner', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('playlist', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lxpapp.playlist')),
            ],
        ),
        migrations.CreateModel(
            name='LearnerMaterialWatched',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('chapter', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lxpapp.chapter')),
                ('course', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lxpapp.course')),
                ('learner', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('material', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lxpapp.material')),
            ],
        ),
        migrations.CreateModel(
            name='LearnerDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_full_name', models.CharField(max_length=200)),
                ('mobile', models.CharField(max_length=10)),
                ('whatsappno', models.CharField(default='', max_length=10)),
                ('profile_pic', models.ImageField(blank=True, null=True, upload_to='profile_pics/')),
                ('learner', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='LearnerCart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.IntegerField(default=0)),
                ('course', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lxpapp.course')),
                ('learner', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='LastUserLogin',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='K8STerminalLearnerCount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('usedvalue', models.PositiveIntegerField(default=0)),
                ('learner', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='K8STerminal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Password', models.TextField()),
                ('usagevalue', models.PositiveIntegerField(default=0)),
                ('learner', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_requests_learner', to=settings.AUTH_USER_MODEL)),
                ('trainer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_requests_trainer', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='IsFirstLogIn',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ErrorLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.CharField(max_length=2048)),
                ('exception', models.TextField()),
                ('traceback', models.TextField()),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='CourseChapter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('chapter', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lxpapp.chapter')),
                ('course', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lxpapp.course')),
                ('subject', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lxpapp.subject')),
            ],
        ),
        migrations.AddField(
            model_name='course',
            name='mainhead',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lxpapp.mainhead'),
        ),
        migrations.AddField(
            model_name='course',
            name='subhead',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lxpapp.subhead'),
        ),
        migrations.CreateModel(
            name='ChapterResultDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('selected', models.CharField(max_length=200)),
                ('chapterresult', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lxpapp.chapterresult')),
                ('question', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lxpapp.chapterquestion')),
            ],
        ),
        migrations.AddField(
            model_name='chapterresult',
            name='course',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lxpapp.course'),
        ),
        migrations.AddField(
            model_name='chapterresult',
            name='learner',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='chapterresult',
            name='subject',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lxpapp.subject'),
        ),
        migrations.AddField(
            model_name='chapterquestion',
            name='subject',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lxpapp.subject'),
        ),
        migrations.AddField(
            model_name='chapter',
            name='subject',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lxpapp.subject'),
        ),
        migrations.CreateModel(
            name='BatchTrainer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('batch', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lxpapp.batch')),
                ('trainer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='BatchRecordedVDOList',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('batch', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lxpapp.batch')),
                ('playlist', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lxpapp.playlist')),
            ],
        ),
        migrations.CreateModel(
            name='Batchlearner',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fee', models.IntegerField(default=0)),
                ('batch', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lxpapp.batch')),
                ('learner', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='BatchCourse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('batch', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lxpapp.batch')),
                ('course', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lxpapp.course')),
            ],
        ),
        migrations.AddField(
            model_name='batch',
            name='coursetype',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lxpapp.coursetype'),
        ),
        migrations.CreateModel(
            name='ActivityAnswers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file_url', models.URLField()),
                ('marks', models.IntegerField(default=0)),
                ('remarks', models.CharField(default='', max_length=2000)),
                ('status', models.BooleanField(default=False)),
                ('submitted_on', models.DateTimeField(auto_now=True)),
                ('activity', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lxpapp.activity')),
                ('course', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lxpapp.course')),
                ('learner', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='activity',
            name='chapter',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lxpapp.chapter'),
        ),
        migrations.AddField(
            model_name='activity',
            name='subject',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lxpapp.subject'),
        ),
    ]
